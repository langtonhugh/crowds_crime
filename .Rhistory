crime_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
View(crime_locations_agg_sf)
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup()
sum(dodge_crime_mini_buf_sf$mini_buf_count)
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = n))
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count))
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(colour = mini_buf_count))
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count))
View(dodge_crime_mini_buf_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
left_join(dodge_crime_buffers_sf)
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count))
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup()
View(dodge_locations_agg_sf)
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodgers_crimes_sf, dodge_crime_buffers_sf)
View(dodge_locations_agg_sf)
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
View(dodge_locations_agg_sf)
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup()
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count))
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count), stat = "sf_coordinates")
View(dodge_crime_buffers_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_df <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble()
View(dodge_crime_mini_buf_df)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_df <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_df <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf)
View(dodge_crime_mini_buf_df)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf)
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count))
View(dodge_crime_mini_buf_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf) %>%
st_as_sf()
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count))
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(fill = mini_buf_count), size = 2) +
scale_colour_viridis_c()
# Plot.
ggplot(data = dodge_crime_mini_buf_sf) +
geom_sf(mapping = aes(colour = mini_buf_count), size = 2) +
scale_colour_viridis_c()
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(colour = mini_buf_count)) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(colour = mini_buf_count)) +
scale_colour_brewer(palette = "Reds") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(colour = mini_buf_count)) +
scale_colour_continuous("reds") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count)) +
scale_fill_continuous("reds") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count) colour = "transparent") +
scale_fill_viridis_c() +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count), colour = "transparent") +
scale_fill_viridis_c() +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count), colour = "transparent", size = 1) +
scale_fill_viridis_c(option = "magma") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count), colour = "transparent", size = 2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Extract crimes for LA dodgers.
dodge_crime_buffers_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium") %>%
st_difference() %>%
st_centroid() %>%
st_buffer(dist = 20) %>%
select(uid)
# Create individual pionts of crimes.
dodgers_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf) %>%
st_as_sf()
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count), colour = "transparent") +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Check same number of crimes.
sum(dodge_crime_mini_buf_sf$mini_buf_count)
# Extract crimes for LA dodgers.
dodge_crime_buffers_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium") %>%
st_difference() %>%
st_centroid() %>%
st_buffer(dist = 15) %>%
select(uid)
# Create individual pionts of crimes.
dodgers_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf) %>%
st_as_sf()
# Check same number of crimes.
sum(dodge_crime_mini_buf_sf$mini_buf_count)
# Extract crimes for LA dodgers.
dodge_crime_buffers_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium") %>%
st_difference() %>%
st_centroid() %>%
st_buffer(dist = 10) %>%
select(uid)
# Create individual pionts of crimes.
dodgers_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf) %>%
st_as_sf()
# Check same number of crimes.
sum(dodge_crime_mini_buf_sf$mini_buf_count)
# Extract crimes for LA dodgers.
dodge_crime_buffers_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium") %>%
st_difference() %>%
st_centroid() %>%
st_buffer(dist = 8) %>%
select(uid)
# Create individual pionts of crimes.
dodgers_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf) %>%
st_as_sf()
# Check same number of crimes.
sum(dodge_crime_mini_buf_sf$mini_buf_count)
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count, colour = mini_buf_count)) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
# geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count)) +
geom_sf(data = dodgers_crimes_sf, col = "Red", alpha = 0.5) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
View(dodgers_crimes_sf)
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
# geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count)) +
geom_sf(data = dodgers_crimes_sf, fill = "Red", col = "transparent", alpha = 0.5) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
# geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count)) +
geom_sf(data = dodgers_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Correlation. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
count_test
rate_test
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "pearson")
count_test
rate_test
# Correlation. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
count_test
rate_test
# Scientific notation off.
options(scipen=99999)
rate_test
count_test
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 14, width = 14, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
legend.text = element_text(size = 5).
axis.text = element_text(size = 4),
axis.title = element_text(size = 7))
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
legend.text = element_text(size = 5),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 14, width = 14, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
legend.text = element_text(size = 6),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 14, width = 14, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crowd density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
legend.text = element_text(size = 6),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 14, width = 14, unit = "cm")
View(pitch_sub_df)
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count)
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
# Correlation. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count)
count_test
rate_test
load("~/GitHub/crowds_crime/mlb_density_workspace.RData")
# Extract crimes for LA dodgers.
dodge_crime_buffers_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium") %>%
st_difference() %>%
st_centroid() %>%
st_buffer(dist = 8) %>%
select(uid)
# Create individual pionts of crimes.
dodgers_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
# Aggregate point to these tiny buffers.
dodge_locations_agg_sf <- st_intersection(dodge_crime_buffers_sf, dodgers_crimes_sf)
# Aggregate crimes in each mini buffer
dodge_crime_mini_buf_sf <- dodge_locations_agg_sf %>%
group_by(uid) %>%
summarise(mini_buf_count = n()) %>%
ungroup() %>%
as_tibble() %>%
select(-geometry) %>%
left_join(dodge_crime_buffers_sf) %>%
st_as_sf()
# Check same number of crimes.
sum(dodge_crime_mini_buf_sf$mini_buf_count)
# Plot on top of building footprints and buffer.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]], size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = osm_result_poly_clipped_list[[4]], size = 0.1, fill = "black", colour = "black", alpha = 1) +
# geom_sf(data = dodge_crime_mini_buf_sf, mapping = aes(fill = mini_buf_count)) +
geom_sf(data = dodgers_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Save.
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Correlation. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count)
count_test
rate_test
# ================================================ #
# Save workspace so we have this.                  #
save.image(file = "mlb_density_workspace.RData") #
