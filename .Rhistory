stads_buffers_list <- group_split(stads_buffers_sf, stadium_name)
# Name elements according to other list (alphabetical).
names(stads_buffers_list) <- names(osm_result_poly_list)
plot(st_geometry(osm_result_poly_list[[7]]))
plot(st_geometry(stads_buffers_list[[7]]), add = T, border = "red")
# Run intersection on each element pairs of these lists. Warnings is standard.
osm_result_poly_clipped_list <- map2(stads_buffers_list, osm_result_poly_list, st_intersection)
# Calculate areal building footprint for each stadium buffer.
footprint_list <- lapply(osm_result_poly_clipped_list, function(x) sum(st_area(x)))
# Get footprint measurements into df.
footprint_df <- footprint_list %>%
bind_rows() %>%
mutate(id = 1) %>%
pivot_longer(cols = -id, names_to = "NAME", values_to = "area") %>%
select(-id) %>%
rename(build_footprint = area)
# Join info back with the game data.
gl_stads_sub_crimes_df <- left_join(gl_stads_sub_crimes_df, footprint_df)
# Calculate attendance density.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
mutate(attend_density = attendance/build_footprint,
attend_density_n = as.numeric(attend_density))
# Relationship between crowd density and crime.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME))
# Visualize for counts and rates.
p_c_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 1)
title_plot <- ggdraw() +
draw_label("Relationship between crime and crowd density at Major League Baseball games during 2018.", size = 10, hjust = 0.5)
density_full_plot <- plot_grid(title_plot, density_facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save.
ggsave(plot = density_full_plot, filename = "visuals/density_facet.png", height = 12, width = 30, unit = "cm")
# ============================================= #
# Save workspace so we have this.               #
save.image(file = "mlb_density_workspace.RData")
# ============================================= #
# Relationship between crowd density and crime.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME))
# Relationship between crowd density and crime.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME)) +
scale_y_log10()
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME))
# Relationship between crowd density and crime.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium") +
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium")) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium" & NAME != "Dodger Stadium")) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium" & NAME != "Dodger Stadium")) +
geom_point(mapping = aes(x = crime_count, y = attend_density_n, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium" & NAME != "Dodger Stadium")) +
geom_point(mapping = aes(x = attend_density_n, y = attend_density_n, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium" & NAME != "")) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = filter(gl_stads_sub_crimes_df, NAME != "Kauffman Stadium" & NAME != "Dodger Stadium")) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
scale_y_log10()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
scale_y_log10()
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME))
# Check distribution of attendance and attendance density.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attendance))
geom_density(mapping = aes(attend_density_n)
)
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attend_density_n))
# Check distribution of attendance and attendance density.
p1 <- ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attendance))
p2 <- ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attend_density_n))
plot_grid(p1, p2)
# Check distribution of attendance and attendance density.
p1 <- ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attendance)) +
facet_wrap(~ NAME, scale = "free")
p2 <- ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attend_density_n)) +
facet_wrap(~ NAME, scale = "free")
plot_grid(p1, p2)
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME))
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME))
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME))
load("~/GitHub/crowds_crime/mlb_density_workspace.RData")
View(gl_stads_sub_crimes_df)
st_area(stads_buffers_sf)
library(tmaptools)
library(maps)
library(osmdata)
library(cowplot)
library(crimedata)
library(dplyr)
library(readr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(sf)
library(purrr)
# Calculate total area of buffer (same for each stadium).
buffer_area <- st_area(stads_buffers_list[[1]])
buffer_area
# Calculate total area of buffer (same for each stadium).
buffer_area <- st_area(stads_buffers_list[[2]])
buffer_area
# Calculate attendance density.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
mutate(area_total = buffer_area,
free_footprint = area_total-build_footprint,
attend_density = attendance/free_footprint,
attend_density_n = as.numeric(attend_density))
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME))
# Visualize for counts and rates.
p_c_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 1)
title_plot <- ggdraw() +
draw_label("Relationship between crime and crowd density at Major League Baseball games during 2018.", size = 10, hjust = 0.5)
density_full_plot <- plot_grid(title_plot, density_facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save.
ggsave(plot = density_full_plot, filename = "visuals/density_facet.png", height = 12, width = 30, unit = "cm")
# ================================================ #
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME))
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME))
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attendance))
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(attend_density_n))
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME))
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count") +
theme(legend.position = "bottom") +
theme_bw()
# Relationship between crowd density and crime across all stadiums.
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count") +
theme_bw() +
theme(legend.position = "bottom")
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour =) +
theme_bw() +
theme(legend.position = "bottom")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom")
ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 12, width = 12, unit = "cm")
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 16, width = 16, unit = "cm")
labs(x = "Crown density", y = "Crime count", colour = NULL,
theme(legend.position = "bottom",
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 16, width = 16, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 16, width = 16, unit = "cm")
# Visualize for counts and rates.
p_c_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot nrow = 2
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 2)
# Plot nrow = 2
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 2)
# Save basic plot.
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 18, width = 16, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 16, width = 16, unit = "cm")
# Visualize for counts and rates.
p_c_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot nrow = 2
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 2)
# Save basic plot.
ggsave(plot = density_facet_plot, filename = "visuals/density_facet.png", height = 18, width = 16, unit = "cm")
# Save basic plot.
ggsave(plot = density_facet_plot, filename = "visuals/density_facet.png", height = 20, width = 16, unit = "cm")
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_minimal() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot nrow = 2
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 2)
# Save basic plot.
ggsave(plot = density_facet_plot, filename = "visuals/density_facet.png", height = 20, width = 16, unit = "cm")
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot nrow = 2
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 2)
# Save basic plot.
ggsave(plot = density_facet_plot, filename = "visuals/density_facet.png", height = 22, width = 16, unit = "cm")
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[1]])
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[1]]) +
geom_sf(data = osm_result_poly_list[[1]])
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[2]]) +
geom_sf(data = osm_result_poly_list[[2]])
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[2]]) +
geom_sf(data = osm_result_poly_list[[2]]) +
geom_sf(data = osm_result_poly_clipped_list[[1]], col = "red")
geom_sf(data = osm_result_poly_clipped_list[[2], col = "red")
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[2]]) +
geom_sf(data = osm_result_poly_list[[2]]) +
geom_sf(data = osm_result_poly_clipped_list[[2]], col = "red")
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[7]]) +
geom_sf(data = osm_result_poly_list[[7]]) +
geom_sf(data = osm_result_poly_clipped_list[[7]], col = "red")
names(stads_buffers_list)
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[4]]) +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], col = "red")
# Make example plot of stadium footprints.
ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], col = "red") +
theme_bw()
# Make example plot of stadium footprints.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], col = "red") +
theme_minimal()
g_dodger
# Make example plot of stadium footprints.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], col = "red") +
theme_bw()
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 12, width = 12, unit = "cm")
# Make example plot of stadium footprints.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], fill = "red") +
theme_bw()
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Make example plot of stadium footprints.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], fill = "red", colour = "transparent") +
theme_bw()
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Make example plot of stadium footprints.
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], fill = "red", colour = "transparent") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 14, width = 16, unit = "cm")
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# ================================================ #
# Save workspace so we have this.                  #
save.image(file = "mlb_density_workspace.RData") #
View(stads_crimes_df)
View(stads_crimes_buffers_sf)
View(gl_stads_sub_crimes_df)
# Extract crimes for LA dodgers.
la_dodger_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name = "Dodger Stadium")
# Extract crimes for LA dodgers.
la_dodger_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], fill = "pink", colour = "transparent", alpha = 0.5) +
geom_sf(data = la_dodger_crimes_sf, colour = "red") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
g_dodger <- ggplot() +
geom_sf(data = stads_buffers_list[[4]], col = "black") +
geom_sf(data = osm_result_poly_list[[4]]) +
geom_sf(data = osm_result_poly_clipped_list[[4]], fill = "pink", colour = "transparent", alpha = 0.7) +
geom_sf(data = la_dodger_crimes_sf, colour = "red", size = 0.5) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = g_dodger, filename = "visuals/dodger_map.png", height = 16, width = 16, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 16, width = 16, unit = "cm")
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) +
labs(x = "Crown density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 16, width = 16, unit = "cm")
citation("crimedata")
