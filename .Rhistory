density_full_plot <- plot_grid(title_plot, density_facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save with title.
ggsave(plot = density_full_plot, filename = "visuals/density_facet.png", height = 12, width = 30, unit = "cm")
# Check distribution of attendance and attendance density.
# p1 <- ggplot(data = gl_stads_sub_crimes_df) +
#   geom_density(mapping = aes(attendance)) +
#   facet_wrap(~ NAME, scale = "free")
#
# p2 <- ggplot(data = gl_stads_sub_crimes_df) +
#   geom_density(mapping = aes(attend_density_n)) +
#   facet_wrap(~ NAME, scale = "free")
#
# plot_grid(p1, p2)
# Make example plot of stadium footprints. We use Guaranteed Rate Field and Kauffman Stadium
# as they are very different in terms of how built-up they are.
# Make example plot of stadium footprints. We use Guaranteed Rate Field and Kauffman Stadium
# as they are very different in terms of how built-up they are.
garan_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Guaranteed Rate Field")
ggplot(data = garan_crimes_sf) +
geom_sf()
osm_result_poly_clipped_list
osm_result_poly_list[["Guaranteed Rate Field"]]
garan_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Guaranteed Rate Field")
gran_build_sf <- osm_result_poly_list[["Guaranteed Rate Field"]]
gran_build_buf_sf <- osm_result_poly_clipped_list[["Guaranteed Rate Field"]]
stads_buffers_list[["Guaranteed Rate Field"]]
gran_buf_sf <- stads_buffers_list[["Guaranteed Rate Field"]]
garan_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Guaranteed Rate Field")
gran_build_sf <- osm_result_poly_list[["Guaranteed Rate Field"]]
gran_build_buf_sf <- osm_result_poly_clipped_list[["Guaranteed Rate Field"]]
gran_buf_sf <- stads_buffers_list[["Guaranteed Rate Field"]]
ggplot() +
geom_sf(data = gran_buf_sf, col = "black") +
geom_sf(data = gran_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = gran_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = garan_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
garan_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Guaranteed Rate Field")
kauf_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Kauffman Stadium")
# Subset all buildings for each.
gran_build_sf <- osm_result_poly_list[["Guaranteed Rate Field"]]
kauf_build_sf <- osm_result_poly_list[["Kauffman Stadium"]]
# Subset all buildings clipped to the buffer for each.
gran_build_buf_sf <- osm_result_poly_clipped_list[["Guaranteed Rate Field"]]
kauf_build_buf_sf <- osm_result_poly_clipped_list[["Kauffman Stadium"]]
# Subset actual buffer for each.
gran_buf_sf <- stads_buffers_list[["Guaranteed Rate Field"]]
kauf_buf_sf <- stads_buffers_list[["Kauffman Stadium"]]
garan_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Guaranteed Rate Field")
kauf_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Kauffman Stadium")
# Subset all buildings for each.
gran_build_sf <- osm_result_poly_list[["Guaranteed Rate Field"]]
kauf_build_sf <- osm_result_poly_list[["Kauffman Stadium"]]
# Subset all buildings clipped to the buffer for each.
gran_build_buf_sf <- osm_result_poly_clipped_list[["Guaranteed Rate Field"]]
kauf_build_buf_sf <- osm_result_poly_clipped_list[["Kauffman Stadium"]]
# Subset actual buffer for each.
gran_buf_sf <- stads_buffers_list[["Guaranteed Rate Field"]]
kauf_buf_sf <- stads_buffers_list[["Kauffman Stadium"]]
# Plot Guaranteed Rate Field.
gran_map_gg <- ggplot() +
geom_sf(data = gran_buf_sf, col = "black") +
geom_sf(data = gran_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = gran_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = gran_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot Kauffman Stadium.
kauf_map_gg <- ggplot() +
geom_sf(data = kauf_buf_sf, col = "black") +
geom_sf(data = kauf_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = kauf_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = kauf_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
gran_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Guaranteed Rate Field")
kauf_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Kauffman Stadium")
# Subset all buildings for each.
gran_build_sf <- osm_result_poly_list[["Guaranteed Rate Field"]]
kauf_build_sf <- osm_result_poly_list[["Kauffman Stadium"]]
# Subset all buildings clipped to the buffer for each.
gran_build_buf_sf <- osm_result_poly_clipped_list[["Guaranteed Rate Field"]]
kauf_build_buf_sf <- osm_result_poly_clipped_list[["Kauffman Stadium"]]
# Subset actual buffer for each.
gran_buf_sf <- stads_buffers_list[["Guaranteed Rate Field"]]
kauf_buf_sf <- stads_buffers_list[["Kauffman Stadium"]]
# Plot Guaranteed Rate Field.
gran_map_gg <- ggplot() +
geom_sf(data = gran_buf_sf, col = "black") +
geom_sf(data = gran_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = gran_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = gran_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot Kauffman Stadium.
kauf_map_gg <- ggplot() +
geom_sf(data = kauf_buf_sf, col = "black") +
geom_sf(data = kauf_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = kauf_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = kauf_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(gran_map_gg, kauf_map_gg, nrow = 1)
# Arrange.
maps_plot <- plot_grid(gran_map_gg, kauf_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/gran_kauf_maps.png", height = 26, width - 16, unit = "cm")
# Arrange.
maps_plot <- plot_grid(gran_map_gg, kauf_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/gran_kauf_maps.png", height = 26, width = 16, unit = "cm")
?st_buffer
plot(st_geometry(osm_result_poly_list[[6]]))
plot(st_geometry(stads_buffers_list[[6]]), add = T, border = "red")
# Example plot.
plot(st_geometry(osm_result_poly_list[[8]]))
plot(st_geometry(stads_buffers_list[[8]]), add = T, border = "red")
# Example plot.
plot(st_geometry(osm_result_poly_list[[9]]))
plot(st_geometry(stads_buffers_list[[9]]), add = T, border = "red")
# Example plot.
plot(st_geometry(osm_result_poly_list[[10]]))
plot(st_geometry(stads_buffers_list[[10]]), add = T, border = "red")
names(osm_result_poly_list)
# Pull crimes for each.
dodge_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
wrigley_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Wrigley Field")
# Subset all buildings for each.
dodge_build_sf <- osm_result_poly_list[["Dodger Stadium"]]
wrigley_build_sf <- osm_result_poly_list[["Wrigley Field"]]
# Subset all buildings clipped to the buffer for each.
dodge_build_buf_sf <- osm_result_poly_clipped_list[["Dodger Stadium"]]
wrigley_build_buf_sf <- osm_result_poly_clipped_list[["Wrigley Field"]]
# Subset actual buffer for each.
dodge_buf_sf <- stads_buffers_list[["Dodger Stadium"]]
wrigley_buf_sf <- stads_buffers_list[["Wrigley Field"]]
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
# Correlation. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count)
count_test
rate_test
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_rate)
count_test
rate_test
# Correlation test. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count)
count_test
# Load workspace.
load(file = "mlb_workspace.RData")
# Run intersection on each element pairs of these lists.
osm_result_poly_clipped_list <- map2(stads_buffers_list, osm_result_poly_list, st_intersection)
# Calculate areal building footprint for each stadium buffer.
footprint_list <- lapply(osm_result_poly_clipped_list, function(x) sum(st_area(x)))
# Get footprint measurements into df.
footprint_df <- footprint_list %>%
bind_rows() %>%
mutate(id = 1) %>%
pivot_longer(cols = -id, names_to = "NAME", values_to = "area") %>%
select(-id) %>%
rename(build_footprint = area)
# Join info back with the game data.
gl_stads_sub_crimes_df <- left_join(gl_stads_sub_crimes_df, footprint_df)
# Calculate total area of buffer (same for each stadium so I just use first element in list).
buffer_area <- st_area(stads_buffers_list[[1]])
# Calculate attendance density.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
mutate(area_total = buffer_area,
free_footprint = area_total-build_footprint,
attend_density = attendance/free_footprint,
attend_density_n = as.numeric(attend_density))
# Relationship between crowd density and crime across all stadiums.
p_agg_density <- ggplot(data = gl_stads_sub_crimes_df) +
geom_jitter(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME)) + # changed to jitter because looked not so nice as the other one due to fewer crimes...
labs(x = "Crowd density", y = "Crime count", colour = NULL) +
theme_bw() +
theme(legend.position = "bottom",
legend.text = element_text(size = 6),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7))
ggsave(plot = p_agg_density, filename = "visuals/density_total.png", height = 14, width = 14, unit = "cm")
# Visualize for counts and rates by stadium.
p_c_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_count, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = NULL, y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
p_cr_density <- ggplot(data = gl_stads_sub_crimes_df) +
theme_bw() +
geom_point(mapping = aes(x = attend_density_n, y = crime_rate, colour = NAME), size = 0.7) +
facet_wrap(~ NAME, scale = "free") +
labs(x = "Crowd density", y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot nrow = 2
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 2)
# Save basic plot.
ggsave(plot = density_facet_plot, filename = "visuals/density_facet.png", height = 22, width = 16, unit = "cm")
# Plot nrow = 1
density_facet_plot <- plot_grid(p_c_density, p_cr_density, nrow = 1)
# Add title.
title_plot <- ggdraw() +
draw_label("Relationship between crime and crowd density at Major League Baseball games during 2018.", size = 10, hjust = 0.5)
density_full_plot <- plot_grid(title_plot, density_facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save with title.
ggsave(plot = density_full_plot, filename = "visuals/density_facet.png", height = 12, width = 30, unit = "cm")
# Check distribution of attendance and attendance density.
# p1 <- ggplot(data = gl_stads_sub_crimes_df) +
#   geom_density(mapping = aes(attendance)) +
#   facet_wrap(~ NAME, scale = "free")
#
# p2 <- ggplot(data = gl_stads_sub_crimes_df) +
#   geom_density(mapping = aes(attend_density_n)) +
#   facet_wrap(~ NAME, scale = "free")
#
# plot_grid(p1, p2)
# Make example plot of stadium footprints. We use Wrigley Field and Dogers Stadium
# as they are quite different in terms of how built-up they are.
# Pull crimes for each.
dodge_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
wrigley_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Wrigley Field")
# Subset all buildings for each.
dodge_build_sf <- osm_result_poly_list[["Dodger Stadium"]]
wrigley_build_sf <- osm_result_poly_list[["Wrigley Field"]]
# Subset all buildings clipped to the buffer for each.
dodge_build_buf_sf <- osm_result_poly_clipped_list[["Dodger Stadium"]]
wrigley_build_buf_sf <- osm_result_poly_clipped_list[["Wrigley Field"]]
# Subset actual buffer for each.
dodge_buf_sf <- stads_buffers_list[["Dodger Stadium"]]
wrigley_buf_sf <- stads_buffers_list[["Wrigley Field"]]
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL) +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png",
height = 26, width = 16, unit = "cm", scale = c(0.9, 0.9),
labels = c("Dodgers Stadium, Los Angeles", "Wrigley Field, Chicago"))
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png",
height = 26, width = 16, unit = "cm", scale = c(0.9, 0.9),
labels = c("Dodgers Stadium Los Angeles", "Wrigley Field Chicago"))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg,
nrow = 2,
labels = c("Dodgers Stadium, Los Angeles", "Wrigley Field, Chicago"),
scale = c(0.9, 0.9))
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
?plot_grid
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Wrigley Field, Chicago") +
theme_bw() +
theme(axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg,
nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Wrigley Field, Chicago") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
count_test <- cor.test(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count, method = "spearman")
plot(gl_stads_sub_crimes_df$attend_density_n, gl_stads_sub_crimes_df$crime_count)
count_test
# ================================================ #
# Save workspace so we have this.                  #
save.image(file = "mlb_density_workspace.RData") #
count_mod <- glm(crime_count ~ attendance, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_mod)
density_mod <- glm(crime_count ~ attend_density_n, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_mod)
# Scientific notation off.
options(scipen=99999)
count_mod <- glm(crime_count ~ attendance, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_mod)
density_mod <- glm(crime_count ~ attend_density_n, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_mod)
View(gl_stads_sub_crimes_df)
gl_stads_sub_crimes_df
names(gl_stads_sub_crimes_df)
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_histogram(mapping = aes(x = crime_count))
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_histogram(mapping = aes(x = crime_count). bins = 30)
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_histogram(mapping = aes(x = crime_count), bins = 30)
min(gl_stads_sub_crimes_df$crime_count)
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_histogram(mapping = aes(x = log(crime_count)), bins = 30)
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_histogram(mapping = aes(x = log(crime_count)), bins = 60)
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = log(crime_count)), bins = 60)
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = crime_count))
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = log(crime_count)))
?glm
?km
?lm
# OLS on the log count.
count_mod_ols <- lm(crime_count ~ attendance, data = gl_stads_sub_crimes_df)
summary(count_mod_ols)
# OLS on the log count.
count_mod_ols <- lm(log(crime_count) ~ attendance, data = gl_stads_sub_crimes_df)
summary(count_mod_ols)
count_mod_ols <- lm(log(crime_count) ~ attendance, data = gl_stads_sub_crimes_df)
summary(count_mod_ols)
density_mod_ols <- lm(log(crime_count) ~ attend_density_n, data = gl_stads_sub_crimes_df)
summary(density_mod_ols)
count_mod <- glm(crime_count ~ attendance, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_mod)
density_mod <- glm(crime_count ~ attend_density_n, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_mod)
count_pois_model <- glm(crime_count ~ attendance, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
# ================================================ #
# Save workspace so we have this.                  #
# save.image(file = "mlb_density_workspace.RData") #
load(file = "mlb_density_workspace.RData")
# Distribution of dependent variables.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = crime_count))
# Check log.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = log(crime_count)))
# Is density better than population count to predict crime?
# Scientific notation off to see full results.
options(scipen=99999)
# Poisson on raw counts.
count_pois_model <- glm(crime_count ~ attendance, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
