density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance + NAME, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
count_pois_model <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n + attendance*NAME, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
# Poisson on raw counts.
count_pois_model <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
install.packages("fastDummies")
# Create dummies.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
fastDummies::dummy_columns()
gl_stads_sub_crimes_df
# ================================================ #
# Save workspace so we have this.                  #
# save.image(file = "mlb_density_workspace.RData") #
load(file = "mlb_density_workspace.RData")
# Distribution of dependent variable.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = crime_count))
# Check log.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = log(crime_count)))
# Create dummies.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
fastDummies::dummy_columns(NAME)
# Create dummies.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
fastDummies::dummy_columns(select_columns = "NAME")
View(gl_stads_sub_crimes_df)
# Distribution of dependent variable.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = crime_count))
# Check log.
ggplot(data = gl_stads_sub_crimes_df) +
geom_density(mapping = aes(x = log(crime_count)))
# Create dummies for control.
gl_stads_sub_crimes_df <- gl_stads_sub_crimes_df %>%
fastDummies::dummy_columns(select_columns = "NAME")
# Is density better than population count to predict crime?
# Scientific notation off to see full results.
options(scipen=99999)
# Poisson on raw counts.
count_pois_model <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
names(gl_stads_sub_crimes_df)
density_pois_dummy_model <- glm(crime_count ~ attend_density_n +
`NAME_Busch Stadium III`+     `NAME_Citi Field`+            `NAME_Comerica Park`+         `NAME_Dodger Stadium`+
`NAME_Fenway Park`+           `NAME_Guaranteed Rate Field`+ `NAME_Kauffman Stadium`+     `NAME_Oracle Park`+
`NAME_Safeco Field`+          `NAME_Wrigley Field`+         `NAME_Yankee Stadium II,
data = gl_stads_sub_crimes_df+ family = "poisson")
density_pois_dummy_model <- glm(crime_count ~ attend_density_n +
`NAME_Busch Stadium III`+     `NAME_Citi Field`+            `NAME_Comerica Park`+         `NAME_Dodger Stadium`+
`NAME_Fenway Park`+           `NAME_Guaranteed Rate Field`+ `NAME_Kauffman Stadium`+     `NAME_Oracle Park`+
`NAME_Safeco Field`+          `NAME_Wrigley Field`+         `NAME_Yankee Stadium II,
data = gl_stads_sub_crimes_df,  family = "poisson")
density_pois_dummy_model <- glm(crime_count ~ attend_density_n +
`NAME_Busch Stadium III`+     `NAME_Citi Field`+            `NAME_Comerica Park`+         `NAME_Dodger Stadium`+
`NAME_Fenway Park`+           `NAME_Guaranteed Rate Field`+ `NAME_Kauffman Stadium`+     `NAME_Oracle Park`+
`NAME_Safeco Field`+          `NAME_Wrigley Field`+         `NAME_Yankee Stadium II,
data = gl_stads_sub_crimes_df,  family = "poisson")
density_pois_dummy_model <- glm(crime_count ~ attend_density_n + `NAME_Busch Stadium III` + `NAME_Citi Field` + `NAME_Comerica Park` + `NAME_Dodger Stadium` + `NAME_Fenway Park`+           `NAME_Guaranteed Rate Field`+ `NAME_Kauffman Stadium`+     `NAME_Oracle Park` + `NAME_Safeco Field` + `NAME_Wrigley Field` + `NAME_Yankee Stadium II,
data = gl_stads_sub_crimes_df,  family = "poisson")
density_pois_dummy_model <- glm(crime_count ~ attend_density_n + `NAME_Busch Stadium III` + `NAME_Citi Field` + `NAME_Comerica Park` + `NAME_Dodger Stadium` + `NAME_Fenway Park`+           `NAME_Guaranteed Rate Field`+ `NAME_Kauffman Stadium`+     `NAME_Oracle Park` + `NAME_Safeco Field` + `NAME_Wrigley Field` + `NAME_Yankee Stadium II,
data = gl_stads_sub_crimes_df,  family = "poisson")
)
)
)
density_pois_dummy_model <- glm(crime_count ~ attend_density_n + `NAME_Busch Stadium III` + `NAME_Citi Field` + `NAME_Comerica Park` + `NAME_Dodger Stadium` + `NAME_Fenway Park`+ `NAME_Guaranteed Rate Field` + `NAME_Kauffman Stadium` + `NAME_Oracle Park` + `NAME_Safeco Field` + `NAME_Wrigley Field` + `NAME_Yankee Stadium II`,
data = gl_stads_sub_crimes_df,  family = "poisson")
summary(density_pois_model)
density_pois_dummy_model <- glm(crime_count ~ attend_density_n + `NAME_Busch Stadium III` + `NAME_Citi Field` + `NAME_Comerica Park` + `NAME_Dodger Stadium` + `NAME_Fenway Park`+ `NAME_Guaranteed Rate Field` + `NAME_Kauffman Stadium` + `NAME_Oracle Park` + `NAME_Safeco Field` + `NAME_Wrigley Field` + `NAME_Yankee Stadium II`,
data = gl_stads_sub_crimes_df,  family = "poisson")
summary(density_pois_dummy_model)
density_pois_model <- glm(crime_count ~ attend_density_n + NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
count_pois_model <- glm(crime_count ~ attendance + NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance + NAME, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n + NAME, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
count_pois_model <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
count_pois_model <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
# Poisson on raw counts, controlling for the stadium (and variation by stadium) with a fixed effect.
count_pois_model <- glm(crime_count ~ attendance + NAME + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
count_pois_model <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(count_pois_model)
density_pois_model <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(density_pois_model)
# OLS on the log count.
count_ols_model <- lm(log(crime_count) ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df)
summary(count_ols_model)
density_ols_model <- lm(log(crime_count) ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df)
summary(density_ols_model)
View9gl_stads_sub_crimes_df
View(gl_stads_sub_crimes_df)
# Remove Dodger Stadium because it is in its own league in terms of attendence.
gl_stads_sub_nod_crimes_df <- gl_stads_sub_crimes_df %>%
filter(NAME != "Dodger Stadium")
View(gl_stads_sub_nod_crimes_df)
install.packages("factoextra")
m1a <- glm(crime_count ~ attendance, data = gl_stads_sub_crimes_df, family = "poisson")
summary(m1a)
m1b <- glm(crime_count ~ attend_density_n, data = gl_stads_sub_crimes_df, family = "poisson")
summary(m1b)
m1c <- lm(log(crime_count) ~ attendance, data = gl_stads_sub_crimes_df)
summary(m1c)
m1d <- lm(log(crime_count) ~ attend_density_n, data = gl_stads_sub_crimes_df)
summary(m1d)
# Models 2: controlling for stadium and interaction.
m2a <- glm(crime_count ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(m2a)
m2b <- glm(crime_count ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df, family = "poisson")
summary(m2b)
m2c <- lm(log(crime_count) ~ attendance + attendance*NAME, data = gl_stads_sub_crimes_df)
summary(m2c)
m2d <- lm(log(crime_count) ~ attend_density_n + attend_density_n*NAME, data = gl_stads_sub_crimes_df)
summary(m2d)
m2d <- lm(log(crime_count) ~ attend_density_n + NAME, data = gl_stads_sub_crimes_df)
summary(m2d)
library(tmaptools)
library(maps)
library(osmdata)
library(cowplot)
library(crimedata)
library(dplyr)
library(readr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(sf)
library(purrr)
# ================================================ #
# Save workspace so we have this.                  #
# save.image(file = "mlb_density_workspace.RData") #
load(file = "mlb_density_workspace.RData")
View(gl_stads_sub_crimes_df)
# Pull crimes for each.
dodge_crimes_sf <- stads_crimes_df %>%
filter(stadium_name == "Dodger Stadium")
wrigley_crimes_sf <- stads_crimes_df %>%
filter(stadium_name == "Wrigley Field")
# Subset all buildings for each.
dodge_build_sf <- osm_result_poly_list[["Dodger Stadium"]]
wrigley_build_sf <- osm_result_poly_list[["Wrigley Field"]]
# Subset all buildings clipped to the buffer for each.
dodge_build_buf_sf <- osm_result_poly_clipped_list[["Dodger Stadium"]]
wrigley_build_buf_sf <- osm_result_poly_clipped_list[["Wrigley Field"]]
# Subset actual buffer for each.
dodge_buf_sf <- stads_buffers_list[["Dodger Stadium"]]
wrigley_buf_sf <- stads_buffers_list[["Wrigley Field"]]
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Wrigley Field, Chicago") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
names(stads_crimes_df)
# Pull crimes for each.
dodge_crimes_sf <- stads_crimes_df %>%
filter(NAME == "Dodger Stadium")
wrigley_crimes_sf <- stads_crimes_df %>%
filter(NAME == "Wrigley Field")
# Subset all buildings for each.
dodge_build_sf <- osm_result_poly_list[["Dodger Stadium"]]
wrigley_build_sf <- osm_result_poly_list[["Wrigley Field"]]
# Subset all buildings clipped to the buffer for each.
dodge_build_buf_sf <- osm_result_poly_clipped_list[["Dodger Stadium"]]
wrigley_build_buf_sf <- osm_result_poly_clipped_list[["Wrigley Field"]]
# Subset actual buffer for each.
dodge_buf_sf <- stads_buffers_list[["Dodger Stadium"]]
wrigley_buf_sf <- stads_buffers_list[["Wrigley Field"]]
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Wrigley Field, Chicago") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
# Pull crimes for each.
dodge_crimes_sf <- stads_crimes_df %>%
filter(NAME == "Dodger Stadium")
wrigley_crimes_sf <- stads_crimes_df %>%
filter(NAME == "Wrigley Field")
# Subset all buildings for each.
dodge_build_sf <- osm_result_poly_list[["Dodger Stadium"]]
wrigley_build_sf <- osm_result_poly_list[["Wrigley Field"]]
# Subset all buildings clipped to the buffer for each.
dodge_build_buf_sf <- osm_result_poly_clipped_list[["Dodger Stadium"]]
wrigley_build_buf_sf <- osm_result_poly_clipped_list[["Wrigley Field"]]
# Subset actual buffer for each.
dodge_buf_sf <- stads_buffers_list[["Dodger Stadium"]]
wrigley_buf_sf <- stads_buffers_list[["Wrigley Field"]]
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Wrigley Field, Chicago") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- cowplot::plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
dodge_map_gg
ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Pull crimes for each.
dodge_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Dodger Stadium")
wrigley_crimes_sf <- stads_crimes_buffers_sf %>%
filter(stadium_name == "Wrigley Field")
# Subset all buildings for each.
dodge_build_sf <- osm_result_poly_list[["Dodger Stadium"]]
wrigley_build_sf <- osm_result_poly_list[["Wrigley Field"]]
# Subset all buildings clipped to the buffer for each.
dodge_build_buf_sf <- osm_result_poly_clipped_list[["Dodger Stadium"]]
wrigley_build_buf_sf <- osm_result_poly_clipped_list[["Wrigley Field"]]
# Subset actual buffer for each.
dodge_buf_sf <- stads_buffers_list[["Dodger Stadium"]]
wrigley_buf_sf <- stads_buffers_list[["Wrigley Field"]]
# Plot Guaranteed Rate Field.
dodge_map_gg <- ggplot() +
geom_sf(data = dodge_buf_sf, col = "black") +
geom_sf(data = dodge_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = dodge_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = dodge_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Dodgers Stadium, Los Angeles") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot wrigleyfman Stadium.
wrigley_map_gg <- ggplot() +
geom_sf(data = wrigley_buf_sf, col = "black") +
geom_sf(data = wrigley_build_sf, size = 0.1, col = "darkgrey", fill = "darkgrey", alpha = 0.8) +
geom_sf(data = wrigley_build_buf_sf, size = 0.1, fill = "black", colour = "black", alpha = 1) +
geom_sf(data = wrigley_crimes_sf, col = "red", alpha = 0.2) +
scale_fill_viridis_c() +
labs(fill = NULL, title = "Wrigley Field, Chicago") +
theme_bw() +
theme(plot.title = element_text(size = 9),
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Arrange.
maps_plot <- plot_grid(dodge_map_gg, wrigley_map_gg, nrow = 2)
# Save.
ggsave(plot = maps_plot, filename = "visuals/dodge_wrigley_maps.png", height = 26, width = 16, unit = "cm")
31/2700000
720/24
citation("crimedata")
library(tidycensus)
library(readr)
library(dplyr)
library(tidyr)
library(sf)
library(ggplot2)
library(purrr)
# safe_df <- read_csv("data/neighborhood_patterns_june_2020.gz")
# cali_df <- safe_df %>%
#   filter(region == "CA")
# write_csv(x = cali_df, path = "data/cali_nhood_safegraph.csv")
# safegraph nhood data subset for california.
cali_df <- read_csv("data/cali_nhood_safegraph.csv")
# grab the variables that are most interesting.
# cali_sub_df <- cali_df %>%
#   select(area,
#          raw_stop_counts, raw_device_counts,
#          stops_by_day, stops_by_each_hour,
#          popularity_by_hour_monday,
#          popularity_by_hour_tuesday,
#          popularity_by_hour_wednesday,
#          popularity_by_hour_thursday,
#          popularity_by_hour_friday,
#          popularity_by_hour_saturday,
#          popularity_by_hour_sunday)
# write_csv(x = cali_sub_df, path = "data/cali_subset_nhood_safegraph.csv")
# separate(col = popularity_by_hour_monday, sep = ",", into = paste0("t", 1:24))
# cali_sub_df <- cali_sub_df %>%
#   mutate(t1 = gsub(x = cali_sub_df$t1, pattern = "\\[", replacement = ""),
#          t24 = gsub(x = cali_sub_df$t24, pattern = "\\]", replacement = ""))
#
# # transform and aggregate for test.
# cali_sub_long_df <- cali_sub_df %>%
#   pivot_longer(cols = -area, names_to = "time", values_to = "ppl") %>%
#   mutate(ppl = as.numeric(ppl)) %>%
#   group_by(area) %>%
#   summarise(total_ppl = sum(ppl))
#
# # read in census block shapefile
# cali_sf <- st_read("data/tl_2016_06_bg.shp")
#
# # la census blocks
# la_df <- read_csv("data/Monthly_Dockless_Vehicles_Trip_Start_By_Census_Block_Group.csv")
# la_census_vec <- la_df$geography_key
#
# # subset
# la_sf <- cali_sf %>%
#   filter(GEOID %in% la_census_vec) %>%
#   rename(area = GEOID)
#
# # plot
# # ggplot(data = la_sf) +
# #   geom_sf()
#
# # join
# la_safe_sf <- left_join(la_sf, cali_sub_long_df)
#
# # plot
# ggplot(data = la_safe_sf) +
#   geom_histogram(mapping = aes(x = total_ppl))
#
# # map
# ggplot(data = la_safe_sf) +
#   geom_sf(mapping = aes(fill = total_ppl), colour = "transparent")
#
# # remove outliers (e.g. airport)
# la_safe_sub_sf <- la_safe_sf %>%
#   filter(total_ppl < 3000)
#
# ggplot(data = la_safe_sub_sf) +
#   geom_histogram(mapping = aes(x = total_ppl), bins = 60)
#
# # map
# ggplot(data = la_safe_sub_sf) +
#   geom_sf(mapping = aes(fill = total_ppl), colour = "transparent")
#
# # airport case study
# airport_sf <- la_safe_sf %>%
#   arrange(desc(total_ppl)) %>%
#   slice(2) # trial and error matched to map shape... soz. plot(st_geometry(airport_sf))
#
# airport_code <- airport_sf$area
#
# # keep hourly counts
# la_long_df <- cali_sub_df %>%
#   filter(area %in% la_census_vec)
#
# # plot airport
# airport_plot_df <- la_long_df %>%
#   filter(area == airport_code) %>%
#   pivot_longer(cols = -area)
#
# airport_plot_df %>%
#   mutate(name = gsub(x = airport_plot_df$name, pattern = "t", replacement = ""),
#          name = as.numeric(name)) %>%
# ggplot() +
#   geom_line(mapping = aes(x = name, y = value, group = 1))
#
#
# # join
# la_safe_daily_sf <- left_join(la_sf, la_long_df)
#
# # animate
safe_df <- read_csv("data/cali_nhood_safegraph.csv")
hour_stops_df <- safe_df %>%
select(area, stops_by_each_hour) %>%
separate(col = stops_by_each_hour, sep = ",", into = paste0("h", 1:720))
hour_stops_clean_df <- hour_stops_df %>%
mutate(h1   = gsub(x = hour_stops_df$h1, pattern = "\\[", replacement = ""),
h720 = gsub(x = hour_stops_df$h720, pattern = "\\]", replacement = ""))
hour_stops_clean_long_df <- hour_stops_clean_df %>%
pivot_longer(cols = -area, names_to = "hour", values_to = "count") #%>%
# mutate(hour_num = gsub(x = hour_stops_clean_df$hour, pattern = "h", replacement = ""))
test <- hour_stops_clean_long_df %>%
mutate(hour_num = gsub(x = hour_stops_clean_long_df$hour, pattern = "h", replacement = "")) %>%
mutate(count = as.numeric(count)) %>%
group_by(hour) %>%
summarise(sum_foot = sum(count))
options(scipen = 9999999)
ggplot(data = test) +
geom_line(mapping = aes(x = hour, y = sum_foot, group = 1)) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())
test2 <- test %>%
mutate(sum_foot2 = ifelse(test = test$sum_foot > 600000, yes = median(test$sum_foot),
no = test$sum_foot))
ggplot(data = test2) +
geom_line(mapping = aes(x = hour, y = sum_foot2, group = 1))
days_vec <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
test <- hour_stops_clean_long_df %>%
mutate(hour_24 = rep(1:24, nrow(hour_stops_clean_long_df)/24))
temp_list <- group_split(test, area)
example <- temp_list[[1]]
days_char <- as.character(1:30)
hello <- example %>%
mutate(tripletID = paste(plate, gl(n()/3, 3), sep = "."))
#===================================================
