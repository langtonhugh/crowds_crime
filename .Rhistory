thing <- pdf_text("https://nflcommunications.com/Documents/2018%20Offseason/04%2019%2018%20-%202018%20Schedule%20Release.pdf") %>% strsplit(split = "\n")
# Subset pages 3 to 9 for the relevant info.
thing <- unlist(thing[3:9])
# Create df to grab week titles.
weeknums <- data.frame(
rownums = which(grepl("WEEK", thing)),
weeks = thing[which(grepl("WEEK", thing))]
)
# Create df for dates of games.
datenums <- data.frame(
rownums = which(grepl(", 2018", thing)),
dates = thing[which(grepl(", 2018", thing))]
)
# Create data frame for games e.g. team1 at team2.
gamenums <- data.frame(
rownums = which(grepl(" at ", thing)),
games = thing[which(grepl(" at ", thing))]
)
# IDs.
link_df <- data.frame(
linkthing = c(1:329)
)
# Loop through weeks.
datalist <- list()
for (i in 1:nrow(weeknums)) {
if (i < nrow(weeknums)) {
datalist[[i]] = data.frame(
linkthing = c((weeknums$rownums[i]-weeknums$rownums[1]+1):(weeknums$rownums[i + 1] - weeknums$rownums[1])),
weeknum = weeknums$weeks[i])
} else {
datalist[[i]] = data.frame(linkthing = c(weeknums$rownums[i]:331),
weeknum = weeknums$weeks[i])
}
}
results <- do.call(rbind, datalist)
link_df <- left_join(link_df, results)
# Loop through dates.
datalist <- list()
for (i in 1:nrow(datenums)) {
if (i < nrow(datenums)) {
datalist[[i]] = data.frame(
linkthing = c((datenums$rownums[i]-datenums$rownums[1]+1):(datenums$rownums[i + 1] - datenums$rownums[1])),
datenum = datenums$dates[i])
} else {
datalist[[i]] = data.frame(linkthing = c(datenums$rownums[i]:331),
datenum = datenums$dates[i])
}
}
results <- do.call(rbind, datalist)
link_df <- left_join(link_df, results)
# Look through versus teams.
datalist <- list()
for (i in 1:nrow(gamenums)) {
if (i < nrow(gamenums)) {
datalist[[i]] = data.frame(
linkthing = c((gamenums$rownums[i]-gamenums$rownums[1]+1):(gamenums$rownums[i + 1] - gamenums$rownums[1])),
game = gamenums$games[i])
} else {
datalist[[i]] = data.frame(linkthing = c(gamenums$rownums[i]:331),
game = gamenums$games[i])
}
}
results <- do.call(rbind, datalist)
# Clean and tidy up.
link_cleaned_df <- link_df %>%
left_join(results) %>%
select(-linkthing) %>%
unique() %>%
rowwise() %>%
mutate(datenum = trimws(datenum)) %>%
separate(col = datenum, sep = " ", into = c("dayweek", "month", "daynum", "year"), remove = F) %>%
unite(col = "full_date", month, daynum, year, sep = " ") %>%
filter(full_date != "NA NA NA") %>%
mutate(full_date_ymd = mdy(full_date),
week          = trimws(tolower(gsub(" ", "_", trimws(weeknum))))) %>%
separate(game, into = c("game_cleaned", "time1", "time2", "network"), sep = "  +", remove = F) %>%
separate(game_cleaned, into = c("away","home"), sep = " at ", remove = F) %>% # warning is fine - just intro NA.
mutate(home  = str_replace(home, " \\(.*\\)", ""),
home  = str_replace_all(home, "[[:punct:]]", ""),
away  = str_replace_all(away, "[[:punct:]]", ""),
time1 = str_replace_all(time1, pattern = "FOX/NFLN\r|NBC\r|ESPN\r|FOX\r|FOX/NFLN" , replacement = ""),
time2 = str_replace_all(time2, pattern = "FOX/NFLN\r|NBC\r|ESPN\r|FOX\r|CBS| \r|NFLN\r|TBD|\r" , replacement = ""))
View(link_cleaned_df)
View(nfl_attend)
View(link_df)
library(stringr)       # wrangling
library(tidyr)         # wrangling
library(sf)            # maps
library(lubridate)     # dates
library(maps)          # boundaries
library(ggplot2)       # visual
library(pdftools)      # get pdf data
# NFL attendance data.
nfl_attend <- read.csv("data/nfl_2018.csv")
# NFL location data.
nfl_coords <- read.csv("https://raw.githubusercontent.com/Sinbad311/CloudProject/master/NFL%20Stadium%20Latitude%20and%20Longtitude.csv")
View(nfl_attend)
library(crimedata)     # crime data
library(nflscrapR)     # NFL data
library(janitor)       # cleaning
library(dplyr)         # wrangling
library(stringr)       # wrangling
library(tidyr)         # wrangling
library(sf)            # maps
library(lubridate)     # dates
library(maps)          # boundaries
library(ggplot2)       # visual
library(pdftools)      # get pdf data
# NFL attendance data.
nfl_attend <- read.csv("data/nfl_2018.csv")
# NFL location data.
nfl_coords <- read.csv("https://raw.githubusercontent.com/Sinbad311/CloudProject/master/NFL%20Stadium%20Latitude%20and%20Longtitude.csv")
# Manual check of these coordinates and history suggest that the LA chargers coordiante is wrong (claims it is in
# San Diego), and the LA Rams is wrong (claim it is in St Louis.) for the year 2018.
# There were stadium changes for both teams
# Both teams are actually in the SoFi stadium w/ coorindates 33.9533354,-118.3409757
# Clean coords.
nfl_coords <- nfl_coords %>%
clean_names() %>%
mutate(team = if_else(team == "Forty-Niners", "49ers", as.character(team)))
# Clean attendance.
nfl_attend <- nfl_attend %>%
clean_names() %>%
rowwise() %>%
mutate(team = last(str_split(tm, " ")[[1]])) %>%
left_join(., nfl_coords, by = c('team' = 'team')) %>%
filter(!is.na(conference))
# Cities in the open crime data.
crimedata_cities <- data.frame(
city = c("Chicago", "Detroit", "Fort Worth", "Kansas City", "Los Angeles", "Louisville", "New York", "San Francisco", "Tucson", "Virginia	Beach")
)
# Further clean and join.
crim_nfl <- nfl_attend %>%
mutate(city = str_replace(tm, team, ""),
city = trimws(city)) %>%
left_join(crimedata_cities) %>%
select(-home, -away, -total, -x, -pic) %>%
pivot_longer(cols = starts_with("week"), names_to = "week", values_to = "attend") %>%
mutate(attend_clean = str_replace(attend, "\\\\", ""),
attend_clean = str_replace(attend_clean, "\\*", ""),
attend_clean = trimws(attend_clean),
attend_clean = ifelse(attend_clean == "Bye", NA, attend_clean)) %>%
drop_na(attend_clean)
# Read in pdf.
thing <- pdf_text("https://nflcommunications.com/Documents/2018%20Offseason/04%2019%2018%20-%202018%20Schedule%20Release.pdf") %>% strsplit(split = "\n")
# Subset pages 3 to 9 for the relevant info.
thing <- unlist(thing[3:9])
# Create df to grab week titles.
weeknums <- data.frame(
rownums = which(grepl("WEEK", thing)),
weeks = thing[which(grepl("WEEK", thing))]
)
# Create df for dates of games.
datenums <- data.frame(
rownums = which(grepl(", 2018", thing)),
dates = thing[which(grepl(", 2018", thing))]
)
# Create data frame for games e.g. team1 at team2.
gamenums <- data.frame(
rownums = which(grepl(" at ", thing)),
games = thing[which(grepl(" at ", thing))]
)
# IDs.
link_df <- data.frame(
linkthing = c(1:329)
)
# Loop through weeks.
datalist <- list()
for (i in 1:nrow(weeknums)) {
if (i < nrow(weeknums)) {
datalist[[i]] = data.frame(
linkthing = c((weeknums$rownums[i]-weeknums$rownums[1]+1):(weeknums$rownums[i + 1] - weeknums$rownums[1])),
weeknum = weeknums$weeks[i])
} else {
datalist[[i]] = data.frame(linkthing = c(weeknums$rownums[i]:331),
weeknum = weeknums$weeks[i])
}
}
results <- do.call(rbind, datalist)
link_df <- left_join(link_df, results)
# Loop through dates.
datalist <- list()
for (i in 1:nrow(datenums)) {
if (i < nrow(datenums)) {
datalist[[i]] = data.frame(
linkthing = c((datenums$rownums[i]-datenums$rownums[1]+1):(datenums$rownums[i + 1] - datenums$rownums[1])),
datenum = datenums$dates[i])
} else {
datalist[[i]] = data.frame(linkthing = c(datenums$rownums[i]:331),
datenum = datenums$dates[i])
}
}
results <- do.call(rbind, datalist)
link_df <- left_join(link_df, results)
# Look through versus teams.
datalist <- list()
for (i in 1:nrow(gamenums)) {
if (i < nrow(gamenums)) {
datalist[[i]] = data.frame(
linkthing = c((gamenums$rownums[i]-gamenums$rownums[1]+1):(gamenums$rownums[i + 1] - gamenums$rownums[1])),
game = gamenums$games[i])
} else {
datalist[[i]] = data.frame(linkthing = c(gamenums$rownums[i]:331),
game = gamenums$games[i])
}
}
results <- do.call(rbind, datalist)
# Clean and tidy up.
link_cleaned_df <- link_df %>%
left_join(results) %>%
select(-linkthing) %>%
unique() %>%
rowwise() %>%
mutate(datenum = trimws(datenum)) %>%
separate(col = datenum, sep = " ", into = c("dayweek", "month", "daynum", "year"), remove = F) %>%
unite(col = "full_date", month, daynum, year, sep = " ") %>%
filter(full_date != "NA NA NA") %>%
mutate(full_date_ymd = mdy(full_date),
week          = trimws(tolower(gsub(" ", "_", trimws(weeknum))))) %>%
separate(game, into = c("game_cleaned", "time1", "time2", "network"), sep = "  +", remove = F) %>%
separate(game_cleaned, into = c("away","home"), sep = " at ", remove = F) %>% # warning is fine - just intro NA.
mutate(home  = str_replace(home, " \\(.*\\)", ""),
home  = str_replace_all(home, "[[:punct:]]", ""),
away  = str_replace_all(away, "[[:punct:]]", ""),
time1 = str_replace_all(time1, pattern = "FOX/NFLN\r|NBC\r|ESPN\r|FOX\r|FOX/NFLN" , replacement = ""),
time2 = str_replace_all(time2, pattern = "FOX/NFLN\r|NBC\r|ESPN\r|FOX\r|CBS| \r|NFLN\r|TBD|\r" , replacement = ""))
View(link_cleaned_df)
library(crimedata)     # crime data
library(nflscrapR)     # NFL data
library(janitor)       # cleaning
library(dplyr)         # wrangling
library(stringr)       # wrangling
library(tidyr)         # wrangling
library(sf)            # maps
library(lubridate)     # dates
library(maps)          # boundaries
library(ggplot2)       # visual
library(pdftools)      # get pdf data
# NFL attendance data.
nfl_attend <- read.csv("data/nfl_2018.csv")
# NFL location data.
nfl_coords <- read.csv("https://raw.githubusercontent.com/Sinbad311/CloudProject/master/NFL%20Stadium%20Latitude%20and%20Longtitude.csv")
# Manual check suggests that the coordinates for LA teams might not be correct for 2018 (the crime
# data year) because both teams rellocated in the last decade or so.
# Clean coords.
nfl_coords <- nfl_coords %>%
clean_names() %>%
mutate(team = if_else(team == "Forty-Niners", "49ers", as.character(team)))
# Clean attendance.
nfl_attend <- nfl_attend %>%
clean_names() %>%
rowwise() %>%
mutate(team = last(str_split(tm, " ")[[1]])) %>%
left_join(., nfl_coords, by = c('team' = 'team')) %>%
filter(!is.na(conference))
# Cities in the open crime data.
crimedata_cities <- data.frame(
city = c("Chicago", "Detroit", "Fort Worth", "Kansas City", "Los Angeles", "Louisville", "New York", "San Francisco", "Tucson", "Virginia	Beach")
)
# Further clean and join.
crim_nfl <- nfl_attend %>%
mutate(city = str_replace(tm, team, ""),
city = trimws(city)) %>%
left_join(crimedata_cities) %>%
select(-home, -away, -total, -x, -pic) %>%
pivot_longer(cols = starts_with("week"), names_to = "week", values_to = "attend") %>%
mutate(attend_clean = str_replace(attend, "\\\\", ""),
attend_clean = str_replace(attend_clean, "\\*", ""),
attend_clean = trimws(attend_clean),
attend_clean = ifelse(attend_clean == "Bye", NA, attend_clean)) %>%
drop_na(attend_clean)
# Read in pdf.
thing <- pdf_text("https://nflcommunications.com/Documents/2018%20Offseason/04%2019%2018%20-%202018%20Schedule%20Release.pdf") %>% strsplit(split = "\n")
# Subset pages 3 to 9 for the relevant info.
thing <- unlist(thing[3:9])
# Create df to grab week titles.
weeknums <- data.frame(
rownums = which(grepl("WEEK", thing)),
weeks = thing[which(grepl("WEEK", thing))]
)
# Create df for dates of games.
datenums <- data.frame(
rownums = which(grepl(", 2018", thing)),
dates = thing[which(grepl(", 2018", thing))]
)
# Create data frame for games e.g. team1 at team2.
gamenums <- data.frame(
rownums = which(grepl(" at ", thing)),
games = thing[which(grepl(" at ", thing))]
)
# IDs.
link_df <- data.frame(
linkthing = c(1:329)
)
# Loop through weeks.
datalist <- list()
for (i in 1:nrow(weeknums)) {
if (i < nrow(weeknums)) {
datalist[[i]] = data.frame(
linkthing = c((weeknums$rownums[i]-weeknums$rownums[1]+1):(weeknums$rownums[i + 1] - weeknums$rownums[1])),
weeknum = weeknums$weeks[i])
} else {
datalist[[i]] = data.frame(linkthing = c(weeknums$rownums[i]:331),
weeknum = weeknums$weeks[i])
}
}
results <- do.call(rbind, datalist)
link_df <- left_join(link_df, results)
# Loop through dates.
datalist <- list()
for (i in 1:nrow(datenums)) {
if (i < nrow(datenums)) {
datalist[[i]] = data.frame(
linkthing = c((datenums$rownums[i]-datenums$rownums[1]+1):(datenums$rownums[i + 1] - datenums$rownums[1])),
datenum = datenums$dates[i])
} else {
datalist[[i]] = data.frame(linkthing = c(datenums$rownums[i]:331),
datenum = datenums$dates[i])
}
}
results <- do.call(rbind, datalist)
link_df <- left_join(link_df, results)
# Look through versus teams.
datalist <- list()
for (i in 1:nrow(gamenums)) {
if (i < nrow(gamenums)) {
datalist[[i]] = data.frame(
linkthing = c((gamenums$rownums[i]-gamenums$rownums[1]+1):(gamenums$rownums[i + 1] - gamenums$rownums[1])),
game = gamenums$games[i])
} else {
datalist[[i]] = data.frame(linkthing = c(gamenums$rownums[i]:331),
game = gamenums$games[i])
}
}
results <- do.call(rbind, datalist)
# Clean and tidy up.
link_cleaned_df <- link_df %>%
left_join(results) %>%
select(-linkthing) %>%
unique() %>%
rowwise() %>%
mutate(datenum = trimws(datenum)) %>%
separate(col = datenum, sep = " ", into = c("dayweek", "month", "daynum", "year"), remove = F) %>%
unite(col = "full_date", month, daynum, year, sep = " ") %>%
filter(full_date != "NA NA NA") %>%
mutate(full_date_ymd = mdy(full_date),
week          = trimws(tolower(gsub(" ", "_", trimws(weeknum))))) %>%
separate(game, into = c("game_cleaned", "time1", "time2", "network"), sep = "  +", remove = F) %>%
separate(game_cleaned, into = c("away","home"), sep = " at ", remove = F) %>% # warning is fine - just intro NA.
mutate(home  = str_replace(home, " \\(.*\\)", ""),
home  = str_replace_all(home, "[[:punct:]]", ""),
away  = str_replace_all(away, "[[:punct:]]", ""),
time1 = str_replace_all(time1, pattern = "FOX/NFLN\r|NBC\r|ESPN\r|FOX\r|FOX/NFLN" , replacement = ""),
time2 = str_replace_all(time2, pattern = "FOX/NFLN\r|NBC\r|ESPN\r|FOX\r|CBS| \r|NFLN\r|TBD|\r" , replacement = ""))
# Leaving the time cleaning for now because I think crime on the whole day is more reasonable
# than a specific time frame due to pre and after-events.
# Join.
all_nfl <- crim_nfl %>%
rename(home = tm) %>%
left_join(link_cleaned_df) %>%
drop_na(full_date_ymd) %>%
filter(city %in% crimedata_cities$city)
# Download open crime data for 2018 and filter for the cities with NFL games.
crimes_sf <- get_crime_data(
years = 2018,
cities = unique(all_nfl$city), # comment out for crimes_all_sf
type = "core",
output = "sf"
)
# crimes_all_sf <- crimes_sf
# st_write(obj = crimes_all_sf, dsn = "data/crimes_all.shp")
# Format dates and subset crimes for the dates on which there were NFL games.
crimes_filter_sf <- crimes_sf %>%
mutate(date_single = str_extract(date_single, "^.{10}"),
date_single_ymd = ymd(date_single)) %>%
filter(date_single_ymd %in% all_nfl$full_date_ymd) %>%
st_transform(2163)
# USA map for check
# usa_sf <- st_as_sf(map("state", fill=TRUE, plot =FALSE))
# usa_sf <- st_transform(usa_sf, st_crs(crimes_filter_sf))
# plot(st_geometry(usa_sf))
# plot(st_geometry(crimes_filter_sf), add = T, col = "red")
# Stadium location checks
stads_df <- all_nfl %>%
distinct(home, .keep_all = T) %>%
select(home, latitude, longitude)
# Create buffer around stadium locations.
nfl_buffers_sf <- all_nfl %>%
distinct(home, .keep_all = T) %>%
select(home, latitude, longitude) %>%
st_as_sf(coords = c(x = "longitude", y = "latitude"), crs = 4326) %>%
st_transform(2163) %>%
st_buffer(dist = 1609)
View(nfl_crimes_df)
# Clip crimes by these buffers.
nfl_crimes_sf <- st_intersection(nfl_buffers_sf, crimes_sf)
# Clip crimes by these buffers.
nfl_crimes_sf <- st_intersection(nfl_buffers_sf, crimes_filter_sf)
View(nfl_crimes_sf)
#
unique(nfl_crimes_sf$home)
nfl_buffers_sf
crimes_filter_sf
nfl_crimes_df <- nfl_crimes_sf %>%
st_set_geometry(NULL) %>%
mutate(date_single = str_extract(date_single, "^.{10}"),
date_single_ymd = ymd(date_single)) %>%
group_by(home) %>%
summarise(crime_count = n()) %>%
ungroup()
View(nfl_crimes_df)
View(nfl_crimes_sf)
View(nfl_crimes_sf)
View(nfl_attend)
View(link_cleaned_df)
View(all_nfl)
# Aggregate by team
nfl_crimes_df <- nfl_crimes_sf %>%
st_set_geometry(NULL) %>%
group_by(home, date_single_ymd) %>%
summarise(crime_count = n()) %>%
ungroup()
View(nfl_crimes_df)
# Aggregate by team
nfl_crimes_df <- nfl_crimes_sf %>%
st_set_geometry(NULL) %>%
group_by(home, date_single_ymd) %>%
summarise(crime_count = n()) %>%
ungroup() %>%
rename(full_date_ymd = date_single_ymd)
# Join attendence data.
nfl_crimes_att_df <- left_join(nfl_crimes_df, all_nfl)
View(nfl_coords)
View(nfl_crimes_att_df)
# Join attendence data.
nfl_crimes_att_df <- nfl_crimes_df %>%
left_join(all_nfl) %>%
drop_na(team)
View(nfl_crimes_att_df)
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count))
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count)) +
geom_smooth(mapping = aes(x = attend, y = crime_count), method = "lm")
?geom_smooth
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count)) +
geom_smooth(mapping = aes(x = attend, y = crime_count), method = "lm")
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count))
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count)) +
geom_smooth(mapping = aes(x = attend, y = crime_count))
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count)) +
geom_point() +
geom_smooth()
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count)) +
geom_point()
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count)) +
geom_point() +
geom_smooth(method = "lm")
cor(nfl_crimes_att_df$crime_count, nfl_crimes_att_df$attend)
ggplot(data = nfl_crimes_att_df, mapping = aes(x = as.numeric(attend), y = crime_count)) +
geom_point() +
geom_smooth(method = "lm")
# Aggregate by team
nfl_crimes_df <- nfl_crimes_sf %>%
st_set_geometry(NULL) %>%
group_by(home, date_single_ymd) %>%
summarise(crime_count = n()) %>%
ungroup() %>%
rename(full_date_ymd = date_single_ymd) %>%
mutate(attend = as.numeric(attend))
# Aggregate by team
nfl_crimes_df <- nfl_crimes_sf %>%
st_set_geometry(NULL) %>%
group_by(home, date_single_ymd) %>%
summarise(crime_count = n()) %>%
ungroup() %>%
rename(full_date_ymd = date_single_ymd) %>%
mutate(attend = as.numeric(attend))
# Aggregate by team
nfl_crimes_df <- nfl_crimes_sf %>%
st_set_geometry(NULL) %>%
group_by(home, date_single_ymd) %>%
summarise(crime_count = n()) %>%
ungroup() %>%
rename(full_date_ymd = date_single_ymd)
# Join attendence data.
nfl_crimes_att_df <- nfl_crimes_df %>%
left_join(all_nfl) %>%
drop_na(team) %>%
mutate(attend = as.numeric(attend))
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count))
cor(nfl_crimes_att_df$crime_count, nfl_crimes_att_df$attend)
cor(nfl_crimes_att_df$crime_count, nfl_crimes_att_df$attend, method = "pearson")
cor(nfl_crimes_att_df$crime_count, nfl_crimes_att_df$attend, method = "spearman")
ggplot(data = nfl_crimes_att_df) +
geom_point(mapping = aes(x = attend, y = crime_count, colour = home))
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count, colour = home)) +
geom_point()
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count, colour = home)) +
geom_point() +
geom_smooth()
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count, colour = home)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = nfl_crimes_att_df, mapping = aes(x = attend, y = crime_count, colour = home)) +
geom_point()
cor(nfl_crimes_att_df$crime_count, nfl_crimes_att_df$attend, method = "pearson")
cor.test(nfl_crimes_att_df$crime_count, nfl_crimes_att_df$attend, method = "pearson")
