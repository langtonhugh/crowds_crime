mutate(crime_rate = 10000*(crime_count/attendance)) %>%
filter(crime_rate > 1 | crime_count > 1)
# Scientific notation off.
options(scipen=99999)
# Visualize attendance. If not much variation, can we really adjust by this?
# ggplot(data = gl_stads_sub_crimes_df) +
#   geom_histogram(mapping = aes(x = attendance), bins = 60) +
#   facet_wrap(~NAME, scales = "free_y")
# Visualize relationship across all teams.
p_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
p_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
main_plot <- plot_grid(p_counts, p_rates, nrow = 1)
# Save.
ggsave(plot = main_plot, filename = "visuals/mbl.png", height = 10, width = 25, unit = "cm")
# Correlation.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4.5),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4.5),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
min(gl_stads_sub_crimes_df$crime_rate)
min(gl_stads_sub_crimes_df$crime_count)
# Join back attendance data.
gl_stads_crimes_df <- left_join(gl_2018_pitch_df, stads_crimes_df)
# Only keep games with more than 1 crime, and calculate a rate.
gl_stads_sub_crimes_df <- gl_stads_crimes_df %>%
mutate(crime_rate = 10000*(crime_count/attendance)) %>%
filter(crime_rate > 1 & crime_count > 1)
min(gl_stads_sub_crimes_df$crime_count)
min(gl_stads_sub_crimes_df$crime_rate)
# Scientific notation off.
options(scipen=99999)
# Visualize attendance. If not much variation, can we really adjust by this?
# ggplot(data = gl_stads_sub_crimes_df) +
#   geom_histogram(mapping = aes(x = attendance), bins = 60) +
#   facet_wrap(~NAME, scales = "free_y")
# Visualize relationship across all teams.
p_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
p_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
main_plot <- plot_grid(p_counts, p_rates, nrow = 1)
# Save.
ggsave(plot = main_plot, filename = "visuals/mbl.png", height = 10, width = 25, unit = "cm")
# Correlation.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4.5),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4.5),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
min(gl_stads_sub_crimes_df$crime_rate)
min(gl_stads_sub_crimes_df$crime_count)
# Join back attendance data.
gl_stads_crimes_df <- left_join(gl_2018_pitch_df, stads_crimes_df)
# Check attendance.
min(gl_stads_crimes_df$crime_count)
min(gl_stads_crimes_df$attendance)
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance))
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 60)
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = crime_count), bins = 60)
# Only keep games with more than 1 crime, and calculate a rate.
gl_stads_sub_crimes_df <- gl_stads_crimes_df %>%
filter(attendance > 1 & crime_count > 1)
min(gl_stads_sub_crimes_df$attendance)
min(gl_stads_sub_crimes_df$crime_count)
gl_stads_crimes_df <- left_join(gl_2018_pitch_df, stads_crimes_df)
# Check variables.
min(gl_stads_crimes_df$crime_count) # some zeros
min(gl_stads_crimes_df$attendance)  # some zeros
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 60)
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = crime_count), bins = 60)
# Only keep games with more than 1 crime, and calculate a rate.
gl_stads_sub_crimes_df <- gl_stads_crimes_df %>%
filter(attendance > 1 & crime_count > 1) %>%
mutate(crime_rate = 10000*(crime_count/attendance))
# Scientific notation off.
options(scipen=99999)
# Visualize attendance. If not much variation, can we really adjust by this?
# ggplot(data = gl_stads_sub_crimes_df) +
#   geom_histogram(mapping = aes(x = attendance), bins = 60) +
#   facet_wrap(~NAME, scales = "free_y")
# Visualize relationship across all teams.
p_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
p_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
main_plot <- plot_grid(p_counts, p_rates, nrow = 1)
# Save.
ggsave(plot = main_plot, filename = "visuals/mbl.png", height = 10, width = 25, unit = "cm")
# Correlation.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4.5),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4.5),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text.x = element_text(size = 4),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Correlation.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
# Correlation.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "pearson")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "pearson")
count_test
rate_test
# Correlation.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
count_test
rate_test
View(gl_stads_sub_crimes_df)
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
count_test
rate_test
p_att <- ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 60) +
facet_wrap(~NAME, scales = "Free")
p_att <- ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 60) +
facet_wrap(~NAME, scales = "free")
p_att <- ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 60) +
facet_wrap(~NAME, scales = "free")
ggsave(plot = p_att, filename = "visuals/att_facet.png", height = 10, width = 25, unit = "cm")
p_att <- ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 30) +
facet_wrap(~NAME, scales = "free")
ggsave(plot = p_att, filename = "visuals/att_facet.png", height = 10, width = 25, unit = "cm")
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1, labels = "hello")
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 2)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 30, width = 12, unit = "cm")
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 26, width = 12, unit = "cm")
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 20, width = 12, unit = "cm")
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 20, width = 15, unit = "cm")
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1,
labels = "Relationship between crime and attendance at Major League Baseball games during 2018.", label_fontface = "plain")
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
# Plot.
full_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
title_plot <- ggdraw() + draw_label("Relationship between crime and attendance at Major League Baseball games in 2018", size = 12)
title_plot
title_plot <- ggdraw() + draw_label("Relationship between crime and attendance at Major League Baseball games in 2018", size = 12, hjust = 0)
title_plot
title_plot <- ggdraw() + draw_label("Relationship between crime and attendance at Major League Baseball games in 2018", size = 12, hjust = 1)
title_plot
# Plot.
facet_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
title_plot <- ggdraw() +
draw_label("Relationship between crime and attendance at Major League Baseball games in 2018", size = 12, hjust = 1)
full_plot <- plot_grid(title_plot, facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
title_plot <- ggdraw() +
draw_label("Relationship between crime and attendance at Major League Baseball games in 2018", size = 12, hjust = 0.5)
full_plot <- plot_grid(title_plot, facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
title_plot <- ggdraw() +
draw_label("Relationship between crime and attendance at Major League Baseball games during 2018.", size = 10, hjust = 0.5)
full_plot <- plot_grid(title_plot, facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
load("~/GitHub/crowds_crime/mlb_workspace.RData")
library(tmaptools)
library(maps)
library(cowplot)
library(crimedata)
library(dplyr)
library(readr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(sf)
# Check punctuation of retrosheet city names.
unique(gl_2018_pitch_df$CITY)
# Clean MLB city names, format date column, and filter out cities not contained in crime data.
gl_2018_pitch_df <- gl_2018_pitch_df %>%
mutate(city_clean = gsub('[[:punct:] ]+',' ', CITY),
game_date_ymd = ymd(date)) %>%
filter(city_clean %in% crimes_sf$city_name)
# Clean crimes dates, retain only cities/dates for which there is a game, change city name to character.
crimes_sub_sf <- crimes_sf %>%
mutate(date_ymd = date(date_single)) %>%
filter(date_ymd %in% gl_2018_pitch_df$game_date_ymd,
city_name %in% gl_2018_pitch_df$city_clean) %>%
mutate(city_name = as.character(city_name))
# Check cities matching.
unique(sort(gl_2018_pitch_df$city_clean))
unique(sort(crimes_sub_sf$city_name))
# To retrieve in stadium coordinates using a Google Map query. First we clean two of the names to make
# them match with Google Map search.  AT&T is now called Oracle Park: https://en.wikipedia.org/wiki/Oracle_Park.
gl_2018_pitch_df <- gl_2018_pitch_df %>%
mutate(NAME = if_else(NAME ==  "Guaranteed Rate Field;U.S. Cellular Field",
"Guaranteed Rate Field",
NAME),
NAME = if_else(NAME == "AT&T Park",
"Oracle Park",
NAME))
# Create vector of unique stadium names.
stadiums_vec <- unique(gl_2018_pitch_df$NAME)
# Create empty list for geocoding results.
stads_list <- list()
# For each stadium name, retrieve the xy coorindates from Google Maps.
for (i in stadiums_vec) {
geocode_result <-  geocode_OSM(i)
stads_list[[i]] <- geocode_result$coords
}
# Bind results together.
stads_df <- bind_rows(stads_list, .id = "stadium_name")
# Save in case change in Google Map query function.
# write_csv(x = stads_df, path = "data/stadium_coords.csv")
# Convert to sf object.
stads_sf <- st_as_sf(stads_df, coords = c(x = "x", y = "y"), crs = 4326)
# USA map for check.
usa_sf <- st_as_sf(map("state", fill=TRUE, plot =FALSE))
usa_sf <- st_transform(usa_sf, 4326)
# Plot.
# ggplot() +
#   geom_sf(data = usa_sf) +
#   geom_sf(data = stads_sf)
# Transform stadiums, crimes and USA to a projected CRS (https://epsg.io/2163).
# Note: what is the impact of choosing a different projection?
stads_sf      <- st_transform(stads_sf, 2163)
crimes_sub_sf <- st_transform(crimes_sub_sf, 2163)
usa_sf        <- st_transform(usa_sf, 2163)
# Visual inspection.
# ggplot() +
#   geom_sf(data = usa_sf) +
#   geom_sf(data = stads_sf)
# Create buffers around stadiums.
stads_buffers_sf <- st_buffer(stads_sf, dist = 1609)
# Save for inspection in QGIS.
# st_write(obj = stads_sf        , dsn = "data/stats_coords.shp")
# st_write(obj = crimes_sub_sf   , dsn = "data/crimes_sub.shp")
# st_write(obj = stads_buffers_sf, dsn = "data/stads_buffers.shp")
# Visual inspection of first observation.
# ggplot() +
#   geom_sf(data = slice(stads_sf, 1), col = "red") +
#   geom_sf(data = slice(stads_buffers_sf, 1), fill = "transparent")
# Intersection between buffers and crimes.
stads_crimes_buffers_sf <- st_intersection(stads_buffers_sf, crimes_sub_sf)
# Aggregate by stadium and by day.
stads_crimes_df <- stads_crimes_buffers_sf %>%
as_tibble() %>%
group_by(stadium_name, date_ymd) %>%
summarise(crime_count = n()) %>%
ungroup() %>%
complete(stadium_name, date_ymd, fill = list(crime_count = 0))
# Check frequencies across all days.
# ggplot(data = stads_crimes_df) +
#   geom_histogram(mapping = aes(crime_count), bins = 30)
# Rename variables for join.
stads_crimes_df <- stads_crimes_df %>%
rename(NAME = stadium_name,
game_date_ymd = date_ymd)
# Join back attendance data.
gl_stads_crimes_df <- left_join(gl_2018_pitch_df, stads_crimes_df)
# Check variables.
min(gl_stads_crimes_df$crime_count) # some zeros
min(gl_stads_crimes_df$attendance)  # some zeros
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 30)
ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = crime_count), bins = 30)
p_att <- ggplot(data = gl_stads_crimes_df) +
geom_histogram(mapping = aes(x = attendance), bins = 30) +
facet_wrap(~NAME, scales = "free")
ggsave(plot = p_att, filename = "visuals/att_facet.png", height = 10, width = 25, unit = "cm")
# Only keep games with more than 1 crime, more than 1 attendence, and calculate a rate.
gl_stads_sub_crimes_df <- gl_stads_crimes_df %>%
filter(attendance > 1 & crime_count > 1) %>%
mutate(crime_rate = 10000*(crime_count/attendance))
# Scientific notation off.
options(scipen=99999)
# Visualize relationship across all teams.
p_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
p_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate), size = 0.5) +
theme_bw() +
theme(legend.position = "none")
main_plot <- plot_grid(p_counts, p_rates, nrow = 1)
# Save.
ggsave(plot = main_plot, filename = "visuals/mbl.png", height = 10, width = 25, unit = "cm")
# Correlation. Note that there are some ties.
count_test <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_count, method = "spearman")
rate_test  <- cor.test(gl_stads_sub_crimes_df$attendance, gl_stads_sub_crimes_df$crime_rate , method = "spearman")
count_test
rate_test
# Visualize relationship by team.
pt_counts <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_count, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime count") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
pt_rates <- ggplot(data = gl_stads_sub_crimes_df) +
geom_point(mapping = aes(x = attendance, y = crime_rate, colour = NAME), size = 0.5) +
facet_wrap(~NAME, scales = "free") +
labs(y = "Crime rate per 10,000 attendees") +
theme_bw() +
theme(legend.position = "none",
axis.text = element_text(size = 4),
axis.title = element_text(size = 7),
strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 6))
# Plot.
facet_plot <- plot_grid(pt_counts, pt_rates, nrow = 1)
title_plot <- ggdraw() +
draw_label("Relationship between crime and attendance at Major League Baseball games during 2018.", size = 10, hjust = 0.5)
full_plot <- plot_grid(title_plot, facet_plot, nrow = 2, rel_heights = c(0.1,1))
# Save.
ggsave(plot = full_plot, filename = "visuals/mbl_facet.png", height = 12, width = 30, unit = "cm")
